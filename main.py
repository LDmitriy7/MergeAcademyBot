import typing
from dataclasses import dataclass

from core import *
from core.handlers.loader import handlers

T = typing.TypeVar('T')


class Model:

    @classmethod
    def get(cls: type[T]) -> T | None:
        return None


@dataclass
class User(Model):
    id: int


@on.command('start')
def welcome():
    if not User.get():
        req.send_message('<b>üëã –ü—Ä–∏–≤i—Ç –ú–∞–∫—Å –°–æ–±–æ–ª—å, –¥—è–∫—É—é –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é</b>')

    msg = req.send_message('<b>–û–±–µ—Ä–∏ —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å üëá</b>')
    print(isinstance(msg, obj.Message))


welcome.exclusive = False

print(handlers)
